name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # (optional) if the pkg server ever misbehaves, uncomment to bypass:
      # JULIA_PKG_SERVER: ""
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'

      - uses: julia-actions/cache@v1

      - name: Ensure General registry
        run: |
          julia -e '
            using Pkg;
            try
              Pkg.Registry.add(Pkg.RegistrySpec(url="https://github.com/JuliaRegistries/General.git"))
            catch
              # ignore if already present
            end
            Pkg.Registry.update();
            println("Registries after update:");
            for r in values(Pkg.Registry.reachable_registries())
              println(" - ", r.name, " @ ", r.path)
            end
          '

      - name: Resolve & instantiate (project)
        run: |
          julia --project=. --color=yes -e 'using Pkg; Pkg.resolve(); Pkg.instantiate(); Pkg.precompile()'

      - name: Pkg. status (debug)
        run: |
          julia --project=. -e 'using Pkg; println("Active project: ", Base.active_project()); Pkg.status()'

      - name: Run tests (headless)
        env:
          GKSwstype: "100"
        run: |
          julia --project=. --color=yes -e 'using Pkg; Pkg.test()'

      - name: Process coverage
        if: runner.os == 'Linux'
        uses: julia-actions/julia-processcoverage@v1
